# Top-most EditorConfig file
root = true

# General editor preferences
[*]
charset = utf-8
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true
indent_size = 4
indent_style = space
tab_width = 4

# Rules for C# and VB.NET
[*.{cs,vb}]
# Don't use 'var' for built-in types
dotnet_style_var_for_built_in_types = false
# Use 'var' when type is apparent
dotnet_style_var_when_type_is_apparent = true
# Don't use 'var' elsewhere
dotnet_style_var_elsewhere = false

# Modifier preferences
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true

# Expression-level preferences
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion
dotnet_style_namespace_match_folder = true:suggestion

# C# specific rules
[*.cs]
# Namespace declarations
csharp_style_namespace_declarations = file_scoped:error

# Using directive placement
csharp_using_directive_placement = outside_namespace:error

# Spacing rules
csharp_space_around_binary_operators = before_and_after
csharp_space_after_cast = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_after_comma = true
csharp_space_before_dot = false
csharp_space_after_dot = false
csharp_space_before_semicolon = false
csharp_space_after_semicolon = true

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_clauses = true

# Brace preferences
csharp_prefer_braces = true

# Parentheses preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

# Expression body preferences
csharp_style_expression_bodied_methods = when_on_single_line:silent
csharp_style_expression_bodied_properties = when_on_single_line:silent
csharp_style_expression_bodied_accessors = when_on_single_line:silent
csharp_style_expression_bodied_constructors = when_on_single_line:silent
csharp_style_expression_bodied_operators = when_on_single_line:silent
csharp_style_expression_bodied_lambdas = when_on_single_line:silent

# Other C# rules
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_indent_labels = one_less_than_current

#### Benennungsstile ####

# Benennungsregeln
dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbolspezifikationen
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

# Benennungsstile
dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.capitalization = pascal_case
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_local_functions = false:silent

# VB.NET specific rules
[*.vb]
#### Benennungsstile ####

# Benennungsregeln
dotnet_naming_rule.interface_should_be_beginnt_mit_i.severity = suggestion
dotnet_naming_rule.interface_should_be_beginnt_mit_i.symbols = interface
dotnet_naming_rule.interface_should_be_beginnt_mit_i.style = beginnt_mit_i

dotnet_naming_rule.typen_should_be_pascal_schreibweise.severity = suggestion
dotnet_naming_rule.typen_should_be_pascal_schreibweise.symbols = typen
dotnet_naming_rule.typen_should_be_pascal_schreibweise.style = pascal_schreibweise

dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.severity = suggestion
dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.symbols = nicht_feldmember
dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.style = pascal_schreibweise

# Symbolspezifikationen
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected

dotnet_naming_symbols.typen.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.typen.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected

dotnet_naming_symbols.nicht_feldmember.applicable_kinds = property, event, method
dotnet_naming_symbols.nicht_feldmember.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected

# Benennungsstile
dotnet_naming_style.beginnt_mit_i.required_prefix = I
dotnet_naming_style.beginnt_mit_i.capitalization = pascal_case

dotnet_naming_style.pascal_schreibweise.capitalization = pascal_case
